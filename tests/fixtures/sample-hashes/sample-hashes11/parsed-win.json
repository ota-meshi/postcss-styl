{
  "raws": {
    "semicolon": false,
    "after": "\r\n"
  },
  "type": "root",
  "nodes": [
    {
      "raws": {
        "before": "",
        "between": " ",
        "afterName": "",
        "semicolon": false,
        "after": "",
        "identifier": ""
      },
      "type": "atrule",
      "name": "",
      "source": {
        "start": {
          "offset": 0,
          "line": 1,
          "column": 1
        },
        "startChildren": {
          "offset": 7,
          "line": 1,
          "column": 8
        },
        "input": {
          "file": "input.styl"
        },
        "end": {
          "offset": 17,
          "line": 1,
          "column": 18
        }
      },
      "params": "foo =",
      "cssLiteral": true,
      "nodes": [
        {
          "raws": {
            "before": " ",
            "between": ": "
          },
          "type": "decl",
          "source": {
            "start": {
              "offset": 8,
              "line": 1,
              "column": 9
            },
            "input": {
              "file": "input.styl"
            },
            "end": {
              "offset": 16,
              "line": 1,
              "column": 17
            }
          },
          "prop": "bar",
          "value": "10px",
          "objectProperty": true
        }
      ],
      "object": true,
      "assignment": true
    },
    {
      "raws": {
        "before": "\r\n\r\n",
        "between": "",
        "semicolon": false,
        "selector": {
          "value": "bar in foo\r\n\r\n\r\n,baz in foo\r\n\r\n\r\n\r\n,a",
          "raw": "bar in foo\r\n/* => true*/\r\n\r\n,baz in foo\r\n/* => false*/\r\n\r\n\r\n,a",
          "stylus": "bar in foo\r\n// => true\r\n\r\nbaz in foo\r\n// => false\r\n\r\n\r\na"
        },
        "after": ""
      },
      "type": "rule",
      "nodes": [
        {
          "raws": {
            "before": "",
            "between": "",
            "afterName": " ",
            "after": "",
            "postfixBefore": " ",
            "identifier": ""
          },
          "type": "atrule",
          "name": "if",
          "source": {
            "start": {
              "offset": 92,
              "line": 11,
              "column": 13
            },
            "input": {
              "file": "input.styl"
            },
            "end": {
              "offset": 104,
              "line": 11,
              "column": 25
            },
            "rawEnd": {
              "offset": 104,
              "line": 11,
              "column": 25
            }
          },
          "params": "bar in foo",
          "postfix": true,
          "nodes": [
            {
              "raws": {
                "before": "\r\n  ",
                "between": ": ",
                "stylusBetween": " "
              },
              "type": "decl",
              "source": {
                "start": {
                  "offset": 82,
                  "line": 11,
                  "column": 3
                },
                "input": {
                  "file": "input.styl"
                },
                "end": {
                  "offset": 90,
                  "line": 11,
                  "column": 11
                }
              },
              "prop": "color",
              "value": "red",
              "omittedSemi": true
            }
          ],
          "omittedSemi": true
        }
      ],
      "source": {
        "start": {
          "offset": 22,
          "line": 3,
          "column": 1
        },
        "startChildren": {
          "offset": 78,
          "line": 10,
          "column": 2
        },
        "input": {
          "file": "input.styl"
        },
        "end": {
          "offset": 104,
          "line": 11,
          "column": 25
        }
      },
      "selector": "bar in foo\r\n\r\n\r\n,baz in foo\r\n\r\n\r\n\r\n,a",
      "pythonic": true
    }
  ],
  "source": {
    "input": {
      "file": "input.styl"
    },
    "start": {
      "offset": 0,
      "line": 1,
      "column": 1
    },
    "lang": "stylus",
    "syntax": "ok"
  }
}