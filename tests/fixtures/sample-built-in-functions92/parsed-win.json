{
  "raws": {
    "semicolon": false,
    "after": ""
  },
  "type": "root",
  "nodes": [
    {
      "raws": {
        "before": "    ",
        "between": "",
        "afterName": "",
        "identifier": ""
      },
      "type": "atrule",
      "name": "replace",
      "source": {
        "start": {
          "line": 1,
          "column": 5
        },
        "input": {
          "file": "input.styl"
        },
        "end": {
          "line": 6,
          "column": 10
        }
      },
      "params": "(expr, str, val)",
      "function": true,
      "body": "\r\n      expr = clone(expr)\r\n      for e, i in expr\r\n        if str == e\r\n          expr[i] = val\r\n      expr",
      "omittedSemi": true
    },
    {
      "raws": {
        "before": "\r\n\r\n    ",
        "between": "",
        "afterName": "",
        "identifier": ""
      },
      "type": "atrule",
      "name": "something",
      "source": {
        "start": {
          "line": 8,
          "column": 5
        },
        "input": {
          "file": "input.styl"
        },
        "end": {
          "line": 17,
          "column": 59
        }
      },
      "params": "(n)",
      "function": true,
      "body": "\r\n      if current-property\r\n        val = current-property[1]\r\n        webkit = replace(val, '__CALL__', s('-webkit-something(%s)', n))\r\n        moz = replace(val, '__CALL__', s('-moz-something(%s)', n))\r\n        add-property(current-property[0], webkit)\r\n        add-property(current-property[0], moz)\r\n        s('something(%s)', n)\r\n      else\r\n        error('something() must be used within a property')",
      "omittedSemi": true
    },
    {
      "raws": {
        "before": "\r\n\r\n    ",
        "between": "",
        "semicolon": false,
        "after": ""
      },
      "type": "rule",
      "nodes": [
        {
          "raws": {
            "before": "\r\n      ",
            "between": ": "
          },
          "type": "decl",
          "source": {
            "start": {
              "line": 20,
              "column": 7
            },
            "input": {
              "file": "input.styl"
            },
            "end": {
              "line": 20,
              "column": 33
            }
          },
          "prop": "foo",
          "value": "something(5px) bar baz"
        }
      ],
      "source": {
        "start": {
          "line": 19,
          "column": 5
        },
        "startChildren": {
          "line": 19,
          "column": 9
        },
        "input": {
          "file": "input.styl"
        },
        "end": {
          "line": 20,
          "column": 33
        }
      },
      "selector": "body",
      "pythonic": true
    }
  ],
  "source": {
    "input": {
      "file": "input.styl"
    },
    "start": {
      "line": 1,
      "column": 1
    }
  }
}